;/*FB_PKG_DELIM*/

__d("HelpContentGalaxyContent.react",["react"],(function(a,b,c,d,e,f,g){"use strict";var h,i=h||d("react");function a(a){a=a.children;return i.jsx("div",{children:a})}a.displayName=a.name+" [from "+f.id+"]";g["default"]=a}),98);
__d("LSHandleAddDeviceSuccess",["LSAppendDataTraceAddon","LSFlushDataTrace.nop","LSIsMobileClient","LSLogMebClientEvent.nop"],(function(a,b,c,d,e,f){function a(){var a=arguments,c=a[a.length-1],d=[],e=[];return c.sequence([function(e){return c.sequence([function(e){return d[0]=c.i64.of_float(Date.now()),function(a){c.logger(a).info(a)}("[EncryptedBackups][LSEncryptedBackupsHandleAddDeviceSuccessStoredProcedure] Beginning execution."),a[3]!==void 0?c.storedProcedure(b("LSAppendDataTraceAddon"),a[3],c.i64.cast([0,1416]),c.i64.cast([0,2]),void 0,void 0):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[1]=a[0],a})},function(a){return d[1]?d[2]=!0:d[2]=!1,d[2]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[10]=c.createArray(),void 0!==void 0?d[11]=(d[10].push(void 0),d[10]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[10],c.i64.cast([0,3]))):c.resolve()},function(e){return c.filter(c.db.table(168).fetch([[[a[0]]]]),function(b){return c.i64.eq(b.backupId,a[0])&&c.blobs.eq(b.devicePublicKeyBlob,a[2])}).next().then(function(e,f){f=e.done;e=e.value;return f?c.sequence([function(a){return c.db.table(178).put({pk:c.i64.cast([0,1]),recoveryCodeStatus:c.i64.cast([0,4])})},function(e){return d[10]="handleAddDeviceSuccess: no matching row in backup client state found.",d[10]!==void 0?c.sequence([function(e){return d[14]=["[EncryptedBackups][LSEncryptedBackupsHandleAddDeviceSuccessStoredProcedure] ","",d[10]].join(""),function(a){c.logger(a).mustfix(a)}(d[14]),d[11]=c.createArray(),a[3]!==void 0?d[15]=(d[11].push(a[3]),d[11]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"LSEncryptedBackupsHandleAddDeviceSuccessStoredProcedure",d[10],d[11],c.i64.cast([0,3]))},function(e){return a[3]!==void 0?c.sequence([function(e){return a[3]!==void 0?c.storedProcedure(b("LSAppendDataTraceAddon"),a[3],c.i64.cast([0,85]),c.i64.cast([0,2]),d[14],void 0):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[15]=a[0],a})},function(a){return d[15]?d[16]=!0:d[16]=!1,d[16]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[17]=c.createArray(),void 0!==void 0?d[18]=(d[17].push(void 0),d[17]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[17],c.i64.cast([0,3]))):c.resolve()}]):c.resolve()},function(d){return a[3]!==void 0?c.nativeOperation(b("LSFlushDataTrace.nop"),a[3]):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[12]=a[0],a})},function(a){return d[12]?d[13]=!0:d[13]=!1,d[13]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[15]=c.createArray(),void 0!==void 0?d[16]=(d[15].push(void 0),d[15]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[15],c.i64.cast([0,3]))):c.resolve()}]):c.sequence([function(e){return a[3]!==void 0?c.sequence([function(d){return a[3]!==void 0?c.storedProcedure(b("LSAppendDataTraceAddon"),a[3],c.i64.cast([0,85]),c.i64.cast([0,2]),["[EncryptedBackups][LSEncryptedBackupsHandleAddDeviceSuccessStoredProcedure] ","",""].join(""),void 0):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[13]=a[0],a})},function(a){return d[13]?d[14]=!0:d[14]=!1,d[14]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[15]=c.createArray(),void 0!==void 0?d[16]=(d[15].push(void 0),d[15]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[15],c.i64.cast([0,3]))):c.resolve()}]):c.resolve()},function(d){return a[3]!==void 0?c.nativeOperation(b("LSFlushDataTrace.nop"),a[3]):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[11]=a[0],a})},function(a){return d[11]?d[12]=!0:d[12]=!1,d[12]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[13]=c.createArray(),void 0!==void 0?d[14]=(d[13].push(void 0),d[13]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[13],c.i64.cast([0,3]))):c.resolve()}])}]):(e.item,c.sequence([function(b){return c.forEach(c.db.table(168).fetch([[[a[0]]]]),function(b){var d=b.update;b.item;return d({deviceId:a[1],authorityLevel:c.i64.cast([0,80])})})},function(a){return c.db.table(178).put({pk:c.i64.cast([0,1]),recoveryCodeStatus:c.i64.cast([0,2])})},function(b){return c.forEach(c.db.table(169).fetch([[[a[0]]],"fk_secure_encrypted_backups_client_state"]),function(a){var b=a.update;a.item;return b({authorityLevel:c.i64.cast([0,80])})})},function(e){return c.sequence([function(d){return a[3]!==void 0?c.storedProcedure(b("LSAppendDataTraceAddon"),a[3],c.i64.cast([0,84]),c.i64.cast([0,2]),void 0,void 0):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[12]=a[0],a})},function(a){return d[12]?d[13]=!0:d[13]=!1,d[13]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[14]=c.createArray(),void 0!==void 0?d[15]=(d[14].push(void 0),d[14]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[14],c.i64.cast([0,3]))):c.resolve()}])},function(d){return a[3]!==void 0?c.nativeOperation(b("LSFlushDataTrace.nop"),a[3]):c.resolve()},function(a){return c.storedProcedure(b("LSIsMobileClient")).then(function(a){return a=a,d[10]=a[0],a})},function(a){return d[10]?d[11]=!0:d[11]=!1,d[11]?(function(a){c.logger(a).mustfix(a)}("[EncryptedBackups][MEBTraceUtils] LSDataTraceMciTraceLog native op not supported"),d[12]=c.createArray(),void 0!==void 0?d[13]=(d[12].push(void 0),d[12]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"MEBTraceUtils","LSDataTraceMciTraceLog native op not supported",d[12],c.i64.cast([0,3]))):c.resolve()}]))})},function(a){return d[4]=c.i64.of_float(Date.now()),d[5]=c.i64.random(),d[7]="Finishing execution. Execution time: ",d[8]=c.i64.to_string(c.i64.sub(d[4],d[0])),d[9]=" ms",d[6]="",function(a){c.logger(a).info(a)}(["[EncryptedBackups][LSEncryptedBackupsHandleAddDeviceSuccessStoredProcedure] ",d[6],d[7],d[6],d[8],d[6],d[9]].join("")),c.i64.eq(c.i64.mod_(d[5],c.i64.cast([0,100])),c.i64.cast([0,0]))?(d[10]=",",d[11]=c.createArray(),void 0!==void 0?d[12]=(d[11].push(void 0),d[11]):0,c.nativeOperation(b("LSLogMebClientEvent.nop"),"LSEncryptedBackupsHandleAddDeviceSuccessStoredProcedure",[d[7],d[10],d[8],d[10],d[9]].join(""),d[11],c.i64.cast([0,4]))):c.resolve()}])},function(a){return c.resolve(e)}])}e.exports=a}),null);