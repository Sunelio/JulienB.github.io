;/*FB_PKG_DELIM*/

__d("PublicKeyEncryptionUtils",["Promise","UInt8Array","XPlatReactCrypto"],(function(a,b,c,d,e,f,g){"use strict";var h;function a(a,b){}function c(a){if(a!=null)return a;else return new Uint8Array(0).buffer}function e(a,b,c,e,f){return d("UInt8Array").concatBytes([a,b,c,e,f]).buffer}function f(a,b,c,e){return d("XPlatReactCrypto").subtleImportKey("raw",a.buffer,"HKDF",!1,["deriveKey"]).then(function(a){return d("XPlatReactCrypto").subtleDeriveKey({hash:"SHA-256",info:c,name:"HKDF",salt:b},a,{length:256,name:"AES-GCM"},!1,[e])})}var i="key length is not "+32;function j(a,b){if(a.length!==32)return b(i)}function k(a){return new(h||(h=b("Promise")))(function(b,c){j(a,c);return b()})}var l=32;g.assertValidCurvePoint=a;g.getSalt=c;g.concatAad=e;g.getAesKey=f;g.testKeyLength=j;g.assertKeyLength=k;g.keyLength=l}),98);
__d("LSPublicEncryptionCreateDecryptedData.nop",["CryptoLogger","Promise","PublicKeyEncryptionUtils","RetUtil","XPlatReactCrypto","requireDeferred"],(function(a,b,c,d,e,f,g){"use strict";var h,i=c("requireDeferred")("PublicKeyCrypto").__setRef("LSPublicEncryptionCreateDecryptedData.nop"),j=c("requireDeferred")("X25519").__setRef("LSPublicEncryptionCreateDecryptedData.nop");function k(a,b){var c=1+d("PublicKeyEncryptionUtils").keyLength+16;a=a.length;a<1+d("PublicKeyEncryptionUtils").keyLength+16&&b("CipherText length is "+a+", < "+c)}function l(a,b,c){b=b[0];if(b!==a)return c("Unexpected version "+b)}function m(a){return new(h||(h=b("Promise")))(function(b,c){l(1,a,c);k(a,c);return b()})}function n(a,c){return new(h||(h=b("Promise")))(function(b,e){d("PublicKeyEncryptionUtils").assertValidCurvePoint(a,e);d("PublicKeyEncryptionUtils").assertValidCurvePoint(c,e);return b()})}a=function(a,c,e,f,g,k,l,o){var p=new Uint8Array(l),q=new Uint8Array([1]),r=d("PublicKeyEncryptionUtils").getSalt(k),s=new Uint8Array(e),t=new Uint8Array(g),u=new Uint8Array(f),v=new Uint8Array(o);return(h||(h=b("Promise"))).all([d("PublicKeyEncryptionUtils").assertKeyLength(s),d("PublicKeyEncryptionUtils").assertKeyLength(u),d("PublicKeyEncryptionUtils").assertKeyLength(t)]).then(function(){return m(v)}).then(function(){return j.load()}).then(function(a){var c=v.slice(1,d("PublicKeyEncryptionUtils").keyLength+1),e=a.publicKeyFromBytes(c,a.KeyPurpose.Encryption);return n(e,t).then(function(){var f=d("PublicKeyEncryptionUtils").concatAad(q,t,s,c,p),g=function(c,d,f){c=a.publicKeyFromBytes(c,a.KeyPurpose.Encryption);d=a.publicKeyFromBytes(d,a.KeyPurpose.Encryption);f=a.secretKeyFromBytes(f,a.KeyPurpose.Encryption);return c==null||d==null||f==null||e==null?(h||(h=b("Promise"))).resolve():(h||(h=b("Promise"))).resolve([c,d,f,e])};return g(s,t,u).then(function(a){if(a==null)return;return{ephemeralPub:a[3],innerAad:f,receiverPriv:a[2],receiverPub:a[0],senderPub:a[1]}})})}).then(function(a){if(a==null)return;var b=a.ephemeralPub,c=a.receiverPriv,e=a.senderPub,f=a.innerAad;return i.load().then(function(a){return a.receiverDeriveSharedSecret(c,b,e)}).then(function(a){if(a==null)return null;else return d("PublicKeyEncryptionUtils").getAesKey(a,r,f,"decrypt")}).then(function(a){if(a==null)return;var b=new Uint8Array(12).buffer,c=v.slice(d("PublicKeyEncryptionUtils").keyLength+1).buffer;return d("XPlatReactCrypto").subtleDecrypt({additionalData:f,iv:new Uint8Array(b),name:"AES-GCM",tagLength:128},a,c)})}).then(function(a){return(h||(h=b("Promise"))).resolve(d("RetUtil").getNullableRetResult(a))})["catch"](function(a){var c=d("CryptoLogger").CryptoLogger("public_encryption_create_decrypted_data");d("CryptoLogger").captureError(c,a).mustfix("Creation of decrypted data for public encryption failed");return(h||(h=b("Promise"))).resolve(d("RetUtil").getNullableRetResult(void 0))})};g["default"]=a}),98);